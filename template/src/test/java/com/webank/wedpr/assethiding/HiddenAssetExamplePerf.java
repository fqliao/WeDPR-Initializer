package com.webank.wedpr.assethiding;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.Callable;
import org.fisco.bcos.channel.client.TransactionSucCallback;
import org.fisco.bcos.web3j.abi.TypeReference;
import org.fisco.bcos.web3j.abi.datatypes.DynamicArray;
import org.fisco.bcos.web3j.abi.datatypes.Function;
import org.fisco.bcos.web3j.abi.datatypes.Type;
import org.fisco.bcos.web3j.abi.datatypes.Utf8String;
import org.fisco.bcos.web3j.abi.datatypes.generated.Int256;
import org.fisco.bcos.web3j.crypto.Credentials;
import org.fisco.bcos.web3j.protocol.Web3j;
import org.fisco.bcos.web3j.protocol.core.RemoteCall;
import org.fisco.bcos.web3j.protocol.core.methods.response.TransactionReceipt;
import org.fisco.bcos.web3j.tuples.generated.Tuple2;
import org.fisco.bcos.web3j.tuples.generated.Tuple3;
import org.fisco.bcos.web3j.tx.Contract;
import org.fisco.bcos.web3j.tx.TransactionManager;
import org.fisco.bcos.web3j.tx.gas.ContractGasProvider;

/**
 * Auto generated code.
 *
 * <p><strong>Do not modify!</strong>
 *
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.fisco.bcos.web3j.codegen.SolidityFunctionWrapperGenerator in the <a
 * href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version none.
 */
@SuppressWarnings("unchecked")
public class HiddenAssetExamplePerf extends Contract {
    public static String BINARY =
            "6080604052600060015534801561001557600080fd5b506150186000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550612d9e806100676000396000f30060806040526004361061008e576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680633aeb91c6146100935780634faaf16e146100bc5780636cd614bb146100fb5780637029144c14610139578063bb60a69614610162578063d8ba51ad1461018b578063e746d232146101b4578063fd2d1b40146101dd575b600080fd5b34801561009f57600080fd5b506100ba60048036036100b59190810190612565565b610206565b005b3480156100c857600080fd5b506100e360048036036100de9190810190612565565b6103bb565b6040516100f2939291906129f2565b60405180910390f35b34801561010757600080fd5b50610122600480360361011d9190810190612565565b610cbd565b604051610130929190612a59565b60405180910390f35b34801561014557600080fd5b50610160600480360361015b9190810190612565565b61115b565b005b34801561016e57600080fd5b5061018960048036036101849190810190612565565b6114ea565b005b34801561019757600080fd5b506101b260048036036101ad9190810190612565565b611693565b005b3480156101c057600080fd5b506101db60048036036101d6919081019061263d565b61189f565b005b3480156101e957600080fd5b5061020460048036036101ff9190810190612565565b611cd9565b005b61020e6122d9565b60008060a06040519081016040528060206040519081016040528060008152508152602001602060405190810160405280600081525081526020016020604051908101604052806000815250815260200160206040519081016040528060008152508152602001602060405190810160405280600081525081525092506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636c3e9922856040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016103019190612ac6565b600060405180830381600087803b15801561031b57600080fd5b505af115801561032f573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506103589190810190612700565b839350829250819150809050866000018760200188604001896060018490528490528490528490525050505061038d85611df9565b915061039d828460000151611eb6565b90506103b282846040015185606001516120c7565b90505050505050565b6060806060600080600060608060606000806103d68d611df9565b97508773ffffffffffffffffffffffffffffffffffffffff16637857d7c96040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561043c57600080fd5b505af1158015610450573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506104749190810190612457565b96508673ffffffffffffffffffffffffffffffffffffffff1663cd30a1d16040805190810160405280600d81526020017f63757272656e74437265646974000000000000000000000000000000000000008152508e6040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610502929190612b94565b600060405180830381600087803b15801561051c57600080fd5b505af1158015610530573d6000803e3d6000fd5b505050508773ffffffffffffffffffffffffffffffffffffffff1663e8434e398d896040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161058b929190612ae8565b602060405180830381600087803b1580156105a557600080fd5b505af11580156105b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506105dd9190810190612480565b95508573ffffffffffffffffffffffffffffffffffffffff1663949d225d6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561064357600080fd5b505af1158015610657573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061067b91908101906124fb565b6040519080825280602002602001820160405280156106ae57816020015b60608152602001906001900390816106995790505b5094508573ffffffffffffffffffffffffffffffffffffffff1663949d225d6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561071557600080fd5b505af1158015610729573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061074d91908101906124fb565b60405190808252806020026020018201604052801561078057816020015b606081526020019060019003908161076b5790505b5093508573ffffffffffffffffffffffffffffffffffffffff1663949d225d6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156107e757600080fd5b505af11580156107fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061081f91908101906124fb565b60405190808252806020026020018201604052801561085257816020015b606081526020019060019003908161083d5790505b509250600091505b8573ffffffffffffffffffffffffffffffffffffffff1663949d225d6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156108be57600080fd5b505af11580156108d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506108f691908101906124fb565b821215610ca5578573ffffffffffffffffffffffffffffffffffffffff1663846719e0836040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016109529190612a3e565b602060405180830381600087803b15801561096c57600080fd5b505af1158015610980573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506109a491908101906124a9565b90508073ffffffffffffffffffffffffffffffffffffffff16639c981fcb6040805190810160405280600d81526020017f63757272656e74437265646974000000000000000000000000000000000000008152506040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610a309190612aa4565b600060405180830381600087803b158015610a4a57600080fd5b505af1158015610a5e573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250610a879190810190612524565b8583815181101515610a9557fe5b906020019060200201819052508073ffffffffffffffffffffffffffffffffffffffff16639c981fcb6040805190810160405280600b81526020017f7370656e744372656469740000000000000000000000000000000000000000008152506040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610b2c9190612aa4565b600060405180830381600087803b158015610b4657600080fd5b505af1158015610b5a573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250610b839190810190612524565b8483815181101515610b9157fe5b906020019060200201819052508073ffffffffffffffffffffffffffffffffffffffff16639c981fcb6040805190810160405280600e81526020017f726567756c6174696f6e496e666f0000000000000000000000000000000000008152506040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610c289190612aa4565b600060405180830381600087803b158015610c4257600080fd5b505af1158015610c56573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250610c7f9190810190612524565b8383815181101515610c8d57fe5b9060200190602002018190525081600101915061085a565b8484849a509a509a5050505050505050509250925092565b60006060600080600080610cd088611df9565b93508373ffffffffffffffffffffffffffffffffffffffff16637857d7c96040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610d3657600080fd5b505af1158015610d4a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610d6e9190810190612457565b92508273ffffffffffffffffffffffffffffffffffffffff1663cd30a1d16040805190810160405280600d81526020017f63757272656e7443726564697400000000000000000000000000000000000000815250896040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610dfc929190612b94565b600060405180830381600087803b158015610e1657600080fd5b505af1158015610e2a573d6000803e3d6000fd5b505050508373ffffffffffffffffffffffffffffffffffffffff1663e8434e3988856040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610e85929190612ae8565b602060405180830381600087803b158015610e9f57600080fd5b505af1158015610eb3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610ed79190810190612480565b91508173ffffffffffffffffffffffffffffffffffffffff1663949d225d6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610f3d57600080fd5b505af1158015610f51573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610f7591908101906124fb565b60001415610fbb577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff809050602060405190810160405280600081525095509550611150565b8173ffffffffffffffffffffffffffffffffffffffff1663846719e060006040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016110119190612a89565b602060405180830381600087803b15801561102b57600080fd5b505af115801561103f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061106391908101906124a9565b905060008173ffffffffffffffffffffffffffffffffffffffff16639c981fcb6040805190810160405280600d81526020017f63726564697453746f72616765000000000000000000000000000000000000008152506040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016110f19190612aa4565b600060405180830381600087803b15801561110b57600080fd5b505af115801561111f573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506111489190810190612524565b819150955095505b505050509250929050565b600080600061100192508273ffffffffffffffffffffffffffffffffffffffff166356004b6a866040805190810160405280600d81526020017f63757272656e74437265646974000000000000000000000000000000000000008152506040805190810160405280600d81526020017f63726564697453746f72616765000000000000000000000000000000000000008152506040518463ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161122893929190612b48565b602060405180830381600087803b15801561124257600080fd5b505af1158015611256573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061127a91908101906124fb565b91508273ffffffffffffffffffffffffffffffffffffffff166356004b6a856040805190810160405280600d81526020017f63757272656e74437265646974000000000000000000000000000000000000008152506040805190810160405280601a81526020017f7370656e744372656469742c726567756c6174696f6e496e666f0000000000008152506040518463ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161133f93929190612b48565b602060405180830381600087803b15801561135957600080fd5b505af115801561136d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061139191908101906124fb565b905060008214806113c157507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff3caf82145b6040805190810160405280601d81526020017f6e6f207065726d697373696f6e206f72206f74686572206572726f727300000081525090151561143a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114319190612aa4565b60405180910390fd5b50600081148061146957507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff3caf81145b6040805190810160405280601d81526020017f6e6f207065726d697373696f6e206f72206f74686572206572726f72730000008152509015156114e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114d99190612aa4565b60405180910390fd5b505050505050565b60608060008060206040519081016040528060008152509350602060405190810160405280600081525092506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16624890d1866040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161158b9190612ac6565b600060405180830381600087803b1580156115a557600080fd5b505af11580156115b9573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506115e291908101906125d1565b80945081955050506115f386611df9565b9150600180540160018190555061160b8285856120c7565b9050600181146040805190810160405280601d81526020017f6e6f207065726d697373696f6e206f72206f74686572206572726f727300000081525090151561168a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116819190612aa4565b60405180910390fd5b50505050505050565b61169b612309565b60008060e060405190810160405280602060405190810160405280600081525081526020016020604051908101604052806000815250815260200160206040519081016040528060008152508152602001602060405190810160405280600081525081526020016020604051908101604052806000815250815260200160206040519081016040528060008152508152602001602060405190810160405280600081525081525092506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630fc91f48856040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016117ba9190612ac6565b600060405180830381600087803b1580156117d457600080fd5b505af11580156117e8573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525061181191908101906127c3565b85955084945083935082925081915080905088600001896020018a6040018b6060018c6080018d60a00186905286905286905286905286905286905250505050505061185c85611df9565b915061186c828460000151611eb6565b905061188182846040015185606001516120c7565b90506118968284608001518560a001516120c7565b90505050505050565b600060608060606000806118b28a611df9565b95506118be8a8a6103bb565b809550819650829750505050600085511480156118dc575060008451145b80156118e9575060008351145b606060405190810160405280602281526020017f74686520726567756c6174696f6e20696e666f20616c7265616479206578697381526020017f7473000000000000000000000000000000000000000000000000000000000000815250901515611989576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119809190612aa4565b60405180910390fd5b508573ffffffffffffffffffffffffffffffffffffffff166313db93466040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156119ee57600080fd5b505af1158015611a02573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611a2691908101906124a9565b91508173ffffffffffffffffffffffffffffffffffffffff1663e942b5166040805190810160405280600b81526020017f7370656e744372656469740000000000000000000000000000000000000000008152508a6040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611ab4929190612b94565b600060405180830381600087803b158015611ace57600080fd5b505af1158015611ae2573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663e942b5166040805190810160405280600e81526020017f726567756c6174696f6e496e666f000000000000000000000000000000000000815250896040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611b72929190612b94565b600060405180830381600087803b158015611b8c57600080fd5b505af1158015611ba0573d6000803e3d6000fd5b505050508573ffffffffffffffffffffffffffffffffffffffff166331afac368a846040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611bfb929190612b18565b602060405180830381600087803b158015611c1557600080fd5b505af1158015611c29573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611c4d91908101906124fb565b9050600181146040805190810160405280601d81526020017f6e6f207065726d697373696f6e206f72206f74686572206572726f7273000000815250901515611ccc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611cc39190612aa4565b60405180910390fd5b5050505050505050505050565b60608060008060206040519081016040528060008152509350602060405190810160405280600081525092506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638f16959a866040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611d7b9190612ac6565b600060405180830381600087803b158015611d9557600080fd5b505af1158015611da9573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250611dd291908101906125d1565b8094508195505050611de386611df9565b9150611def8285611eb6565b9050505050505050565b600080600061100191508173ffffffffffffffffffffffffffffffffffffffff1663f23f63c9856040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611e589190612ac6565b602060405180830381600087803b158015611e7257600080fd5b505af1158015611e86573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611eaa91908101906124d2565b90508092505050919050565b6000808373ffffffffffffffffffffffffffffffffffffffff16637857d7c96040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015611f1d57600080fd5b505af1158015611f31573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611f559190810190612457565b90508073ffffffffffffffffffffffffffffffffffffffff1663cd30a1d16040805190810160405280600d81526020017f63757272656e7443726564697400000000000000000000000000000000000000815250856040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611fe3929190612b94565b600060405180830381600087803b158015611ffd57600080fd5b505af1158015612011573d6000803e3d6000fd5b505050508373ffffffffffffffffffffffffffffffffffffffff166328bb211784836040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161206c929190612ae8565b602060405180830381600087803b15801561208657600080fd5b505af115801561209a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506120be91908101906124fb565b91505092915050565b6000808473ffffffffffffffffffffffffffffffffffffffff166313db93466040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561212e57600080fd5b505af1158015612142573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061216691908101906124a9565b90508073ffffffffffffffffffffffffffffffffffffffff1663e942b5166040805190810160405280600d81526020017f63726564697453746f7261676500000000000000000000000000000000000000815250856040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016121f4929190612b94565b600060405180830381600087803b15801561220e57600080fd5b505af1158015612222573d6000803e3d6000fd5b505050508473ffffffffffffffffffffffffffffffffffffffff166331afac3685836040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161227d929190612b18565b602060405180830381600087803b15801561229757600080fd5b505af11580156122ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506122cf91908101906124fb565b9150509392505050565b60a06040519081016040528060608152602001606081526020016060815260200160608152602001606081525090565b60e060405190810160405280606081526020016060815260200160608152602001606081526020016060815260200160608152602001606081525090565b60006123538251612c89565b905092915050565b60006123678251612c9b565b905092915050565b600061237b8251612cad565b905092915050565b600061238f8251612cbf565b905092915050565b60006123a38251612cd1565b905092915050565b600082601f83011215156123be57600080fd5b81356123d16123cc82612bf8565b612bcb565b915080825260208301602083018583830111156123ed57600080fd5b6123f8838284612d11565b50505092915050565b600082601f830112151561241457600080fd5b815161242761242282612bf8565b612bcb565b9150808252602083016020830185838301111561244357600080fd5b61244e838284612d20565b50505092915050565b60006020828403121561246957600080fd5b600061247784828501612347565b91505092915050565b60006020828403121561249257600080fd5b60006124a08482850161235b565b91505092915050565b6000602082840312156124bb57600080fd5b60006124c98482850161236f565b91505092915050565b6000602082840312156124e457600080fd5b60006124f284828501612383565b91505092915050565b60006020828403121561250d57600080fd5b600061251b84828501612397565b91505092915050565b60006020828403121561253657600080fd5b600082015167ffffffffffffffff81111561255057600080fd5b61255c84828501612401565b91505092915050565b6000806040838503121561257857600080fd5b600083013567ffffffffffffffff81111561259257600080fd5b61259e858286016123ab565b925050602083013567ffffffffffffffff8111156125bb57600080fd5b6125c7858286016123ab565b9150509250929050565b600080604083850312156125e457600080fd5b600083015167ffffffffffffffff8111156125fe57600080fd5b61260a85828601612401565b925050602083015167ffffffffffffffff81111561262757600080fd5b61263385828601612401565b9150509250929050565b6000806000806080858703121561265357600080fd5b600085013567ffffffffffffffff81111561266d57600080fd5b612679878288016123ab565b945050602085013567ffffffffffffffff81111561269657600080fd5b6126a2878288016123ab565b935050604085013567ffffffffffffffff8111156126bf57600080fd5b6126cb878288016123ab565b925050606085013567ffffffffffffffff8111156126e857600080fd5b6126f4878288016123ab565b91505092959194509250565b6000806000806080858703121561271657600080fd5b600085015167ffffffffffffffff81111561273057600080fd5b61273c87828801612401565b945050602085015167ffffffffffffffff81111561275957600080fd5b61276587828801612401565b935050604085015167ffffffffffffffff81111561278257600080fd5b61278e87828801612401565b925050606085015167ffffffffffffffff8111156127ab57600080fd5b6127b787828801612401565b91505092959194509250565b60008060008060008060c087890312156127dc57600080fd5b600087015167ffffffffffffffff8111156127f657600080fd5b61280289828a01612401565b965050602087015167ffffffffffffffff81111561281f57600080fd5b61282b89828a01612401565b955050604087015167ffffffffffffffff81111561284857600080fd5b61285489828a01612401565b945050606087015167ffffffffffffffff81111561287157600080fd5b61287d89828a01612401565b935050608087015167ffffffffffffffff81111561289a57600080fd5b6128a689828a01612401565b92505060a087015167ffffffffffffffff8111156128c357600080fd5b6128cf89828a01612401565b9150509295509295509295565b60006128e782612c31565b8084526020840193508360208202850161290085612c24565b60005b8481101561293957838303885261291b8383516129bc565b925061292682612c52565b9150602088019750600181019050612903565b508196508694505050505092915050565b61295381612cdb565b82525050565b61296281612ced565b82525050565b61297181612c7f565b82525050565b61298081612cff565b82525050565b600061299182612c47565b8084526129a5816020860160208601612d20565b6129ae81612d53565b602085010191505092915050565b60006129c782612c3c565b8084526129db816020860160208601612d20565b6129e481612d53565b602085010191505092915050565b60006060820190508181036000830152612a0c81866128dc565b90508181036020830152612a2081856128dc565b90508181036040830152612a3481846128dc565b9050949350505050565b6000602082019050612a536000830184612968565b92915050565b6000604082019050612a6e6000830185612968565b8181036020830152612a808184612986565b90509392505050565b6000602082019050612a9e6000830184612977565b92915050565b60006020820190508181036000830152612abe81846129bc565b905092915050565b60006020820190508181036000830152612ae08184612986565b905092915050565b60006040820190508181036000830152612b028185612986565b9050612b11602083018461294a565b9392505050565b60006040820190508181036000830152612b328185612986565b9050612b416020830184612959565b9392505050565b60006060820190508181036000830152612b628186612986565b90508181036020830152612b7681856129bc565b90508181036040830152612b8a81846129bc565b9050949350505050565b60006040820190508181036000830152612bae81856129bc565b90508181036020830152612bc28184612986565b90509392505050565b6000604051905081810181811067ffffffffffffffff82111715612bee57600080fd5b8060405250919050565b600067ffffffffffffffff821115612c0f57600080fd5b601f19601f8301169050602081019050919050565b6000602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000612c9482612c5f565b9050919050565b6000612ca682612c5f565b9050919050565b6000612cb882612c5f565b9050919050565b6000612cca82612c5f565b9050919050565b6000819050919050565b6000612ce682612c5f565b9050919050565b6000612cf882612c5f565b9050919050565b6000612d0a82612c7f565b9050919050565b82818337600083830152505050565b60005b83811015612d3e578082015181840152602081019050612d23565b83811115612d4d576000848401525b50505050565b6000601f19601f83011690509190505600a265627a7a72305820ad3321b918e6c10649abaf7a064b43c47c35e1d1bba7040a77550bda280206456c6578706572696d656e74616cf50037";

    public static final String ABI =
            "[{\"constant\":false,\"inputs\":[{\"name\":\"hiddenAssetTable\",\"type\":\"string\"},{\"name\":\"transferRequestPb\",\"type\":\"string\"}],\"name\":\"transferredCredit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"regulationInfoTable\",\"type\":\"string\"},{\"name\":\"currentCreditPb\",\"type\":\"string\"}],\"name\":\"queryRegulationInfo\",\"outputs\":[{\"name\":\"\",\"type\":\"string[]\"},{\"name\":\"\",\"type\":\"string[]\"},{\"name\":\"\",\"type\":\"string[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"hiddenAssetTable\",\"type\":\"string\"},{\"name\":\"currentCreditPb\",\"type\":\"string\"}],\"name\":\"queryCredit\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"hiddenAssetTable\",\"type\":\"string\"},{\"name\":\"regulationInfoTable\",\"type\":\"string\"}],\"name\":\"init\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"hiddenAssetTable\",\"type\":\"string\"},{\"name\":\"issueArgumentPb\",\"type\":\"string\"}],\"name\":\"issueCredit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"hiddenAssetTable\",\"type\":\"string\"},{\"name\":\"splitRequestPb\",\"type\":\"string\"}],\"name\":\"splitCredit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"regulationInfoTable\",\"type\":\"string\"},{\"name\":\"currentCreditPb\",\"type\":\"string\"},{\"name\":\"spentCreditPb\",\"type\":\"string\"},{\"name\":\"regulationInfoPb\",\"type\":\"string\"}],\"name\":\"insertRegulationInfo\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"hiddenAssetTable\",\"type\":\"string\"},{\"name\":\"fulfillArgumentPb\",\"type\":\"string\"}],\"name\":\"fulfillCredit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]";

    public static final String FUNC_TRANSFERREDCREDIT = "transferredCredit";

    public static final String FUNC_QUERYREGULATIONINFO = "queryRegulationInfo";

    public static final String FUNC_QUERYCREDIT = "queryCredit";

    public static final String FUNC_INIT = "init";

    public static final String FUNC_ISSUECREDIT = "issueCredit";

    public static final String FUNC_SPLITCREDIT = "splitCredit";

    public static final String FUNC_INSERTREGULATIONINFO = "insertRegulationInfo";

    public static final String FUNC_FULFILLCREDIT = "fulfillCredit";

    @Deprecated
    protected HiddenAssetExamplePerf(
            String contractAddress,
            Web3j web3j,
            Credentials credentials,
            BigInteger gasPrice,
            BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected HiddenAssetExamplePerf(
            String contractAddress,
            Web3j web3j,
            Credentials credentials,
            ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected HiddenAssetExamplePerf(
            String contractAddress,
            Web3j web3j,
            TransactionManager transactionManager,
            BigInteger gasPrice,
            BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected HiddenAssetExamplePerf(
            String contractAddress,
            Web3j web3j,
            TransactionManager transactionManager,
            ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public RemoteCall<TransactionReceipt> transferredCredit(
            String hiddenAssetTable, String transferRequestPb) {
        final Function function =
                new Function(
                        FUNC_TRANSFERREDCREDIT,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(hiddenAssetTable),
                                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(
                                        transferRequestPb)),
                        Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public void transferredCredit(
            String hiddenAssetTable, String transferRequestPb, TransactionSucCallback callback) {
        final Function function =
                new Function(
                        FUNC_TRANSFERREDCREDIT,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(hiddenAssetTable),
                                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(
                                        transferRequestPb)),
                        Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String transferredCreditSeq(String hiddenAssetTable, String transferRequestPb) {
        final Function function =
                new Function(
                        FUNC_TRANSFERREDCREDIT,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(hiddenAssetTable),
                                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(
                                        transferRequestPb)),
                        Collections.<TypeReference<?>>emptyList());
        return createTransactionSeq(function);
    }

    public RemoteCall<Tuple3<List<String>, List<String>, List<String>>> queryRegulationInfo(
            String regulationInfoTable, String currentCreditPb) {
        final Function function =
                new Function(
                        FUNC_QUERYREGULATIONINFO,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(
                                        regulationInfoTable),
                                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(currentCreditPb)),
                        Arrays.<TypeReference<?>>asList(
                                new TypeReference<DynamicArray<Utf8String>>() {},
                                new TypeReference<DynamicArray<Utf8String>>() {},
                                new TypeReference<DynamicArray<Utf8String>>() {}));
        return new RemoteCall<Tuple3<List<String>, List<String>, List<String>>>(
                new Callable<Tuple3<List<String>, List<String>, List<String>>>() {
                    @Override
                    public Tuple3<List<String>, List<String>, List<String>> call()
                            throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple3<List<String>, List<String>, List<String>>(
                                convertToNative((List<Utf8String>) results.get(0).getValue()),
                                convertToNative((List<Utf8String>) results.get(1).getValue()),
                                convertToNative((List<Utf8String>) results.get(2).getValue()));
                    }
                });
    }

    public RemoteCall<Tuple2<BigInteger, String>> queryCredit(
            String hiddenAssetTable, String currentCreditPb) {
        final Function function =
                new Function(
                        FUNC_QUERYCREDIT,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(hiddenAssetTable),
                                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(currentCreditPb)),
                        Arrays.<TypeReference<?>>asList(
                                new TypeReference<Int256>() {},
                                new TypeReference<Utf8String>() {}));
        return new RemoteCall<Tuple2<BigInteger, String>>(
                new Callable<Tuple2<BigInteger, String>>() {
                    @Override
                    public Tuple2<BigInteger, String> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple2<BigInteger, String>(
                                (BigInteger) results.get(0).getValue(),
                                (String) results.get(1).getValue());
                    }
                });
    }

    public RemoteCall<TransactionReceipt> init(
            String hiddenAssetTable, String regulationInfoTable) {
        final Function function =
                new Function(
                        FUNC_INIT,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(hiddenAssetTable),
                                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(
                                        regulationInfoTable)),
                        Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public void init(
            String hiddenAssetTable, String regulationInfoTable, TransactionSucCallback callback) {
        final Function function =
                new Function(
                        FUNC_INIT,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(hiddenAssetTable),
                                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(
                                        regulationInfoTable)),
                        Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String initSeq(String hiddenAssetTable, String regulationInfoTable) {
        final Function function =
                new Function(
                        FUNC_INIT,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(hiddenAssetTable),
                                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(
                                        regulationInfoTable)),
                        Collections.<TypeReference<?>>emptyList());
        return createTransactionSeq(function);
    }

    public RemoteCall<TransactionReceipt> issueCredit(
            String hiddenAssetTable, String issueArgumentPb) {
        final Function function =
                new Function(
                        FUNC_ISSUECREDIT,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(hiddenAssetTable),
                                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(issueArgumentPb)),
                        Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public void issueCredit(
            String hiddenAssetTable, String issueArgumentPb, TransactionSucCallback callback) {
        final Function function =
                new Function(
                        FUNC_ISSUECREDIT,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(hiddenAssetTable),
                                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(issueArgumentPb)),
                        Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String issueCreditSeq(String hiddenAssetTable, String issueArgumentPb) {
        final Function function =
                new Function(
                        FUNC_ISSUECREDIT,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(hiddenAssetTable),
                                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(issueArgumentPb)),
                        Collections.<TypeReference<?>>emptyList());
        return createTransactionSeq(function);
    }

    public RemoteCall<TransactionReceipt> splitCredit(
            String hiddenAssetTable, String splitRequestPb) {
        final Function function =
                new Function(
                        FUNC_SPLITCREDIT,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(hiddenAssetTable),
                                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(splitRequestPb)),
                        Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public void splitCredit(
            String hiddenAssetTable, String splitRequestPb, TransactionSucCallback callback) {
        final Function function =
                new Function(
                        FUNC_SPLITCREDIT,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(hiddenAssetTable),
                                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(splitRequestPb)),
                        Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String splitCreditSeq(String hiddenAssetTable, String splitRequestPb) {
        final Function function =
                new Function(
                        FUNC_SPLITCREDIT,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(hiddenAssetTable),
                                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(splitRequestPb)),
                        Collections.<TypeReference<?>>emptyList());
        return createTransactionSeq(function);
    }

    public RemoteCall<TransactionReceipt> insertRegulationInfo(
            String regulationInfoTable,
            String currentCreditPb,
            String spentCreditPb,
            String regulationInfoPb) {
        final Function function =
                new Function(
                        FUNC_INSERTREGULATIONINFO,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(
                                        regulationInfoTable),
                                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(currentCreditPb),
                                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(spentCreditPb),
                                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(
                                        regulationInfoPb)),
                        Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public void insertRegulationInfo(
            String regulationInfoTable,
            String currentCreditPb,
            String spentCreditPb,
            String regulationInfoPb,
            TransactionSucCallback callback) {
        final Function function =
                new Function(
                        FUNC_INSERTREGULATIONINFO,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(
                                        regulationInfoTable),
                                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(currentCreditPb),
                                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(spentCreditPb),
                                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(
                                        regulationInfoPb)),
                        Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String insertRegulationInfoSeq(
            String regulationInfoTable,
            String currentCreditPb,
            String spentCreditPb,
            String regulationInfoPb) {
        final Function function =
                new Function(
                        FUNC_INSERTREGULATIONINFO,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(
                                        regulationInfoTable),
                                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(currentCreditPb),
                                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(spentCreditPb),
                                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(
                                        regulationInfoPb)),
                        Collections.<TypeReference<?>>emptyList());
        return createTransactionSeq(function);
    }

    public RemoteCall<TransactionReceipt> fulfillCredit(
            String hiddenAssetTable, String fulfillArgumentPb) {
        final Function function =
                new Function(
                        FUNC_FULFILLCREDIT,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(hiddenAssetTable),
                                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(
                                        fulfillArgumentPb)),
                        Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public void fulfillCredit(
            String hiddenAssetTable, String fulfillArgumentPb, TransactionSucCallback callback) {
        final Function function =
                new Function(
                        FUNC_FULFILLCREDIT,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(hiddenAssetTable),
                                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(
                                        fulfillArgumentPb)),
                        Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String fulfillCreditSeq(String hiddenAssetTable, String fulfillArgumentPb) {
        final Function function =
                new Function(
                        FUNC_FULFILLCREDIT,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(hiddenAssetTable),
                                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(
                                        fulfillArgumentPb)),
                        Collections.<TypeReference<?>>emptyList());
        return createTransactionSeq(function);
    }

    @Deprecated
    public static HiddenAssetExamplePerf load(
            String contractAddress,
            Web3j web3j,
            Credentials credentials,
            BigInteger gasPrice,
            BigInteger gasLimit) {
        return new HiddenAssetExamplePerf(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static HiddenAssetExamplePerf load(
            String contractAddress,
            Web3j web3j,
            TransactionManager transactionManager,
            BigInteger gasPrice,
            BigInteger gasLimit) {
        return new HiddenAssetExamplePerf(
                contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static HiddenAssetExamplePerf load(
            String contractAddress,
            Web3j web3j,
            Credentials credentials,
            ContractGasProvider contractGasProvider) {
        return new HiddenAssetExamplePerf(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static HiddenAssetExamplePerf load(
            String contractAddress,
            Web3j web3j,
            TransactionManager transactionManager,
            ContractGasProvider contractGasProvider) {
        return new HiddenAssetExamplePerf(
                contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<HiddenAssetExamplePerf> deploy(
            Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(
                HiddenAssetExamplePerf.class, web3j, credentials, contractGasProvider, BINARY, "");
    }

    public static RemoteCall<HiddenAssetExamplePerf> deploy(
            Web3j web3j,
            TransactionManager transactionManager,
            ContractGasProvider contractGasProvider) {
        return deployRemoteCall(
                HiddenAssetExamplePerf.class,
                web3j,
                transactionManager,
                contractGasProvider,
                BINARY,
                "");
    }

    @Deprecated
    public static RemoteCall<HiddenAssetExamplePerf> deploy(
            Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(
                HiddenAssetExamplePerf.class, web3j, credentials, gasPrice, gasLimit, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<HiddenAssetExamplePerf> deploy(
            Web3j web3j,
            TransactionManager transactionManager,
            BigInteger gasPrice,
            BigInteger gasLimit) {
        return deployRemoteCall(
                HiddenAssetExamplePerf.class,
                web3j,
                transactionManager,
                gasPrice,
                gasLimit,
                BINARY,
                "");
    }
}
