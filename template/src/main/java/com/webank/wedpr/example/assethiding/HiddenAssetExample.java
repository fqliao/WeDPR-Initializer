package com.webank.wedpr.example.assethiding;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.Callable;
import org.fisco.bcos.channel.client.TransactionSucCallback;
import org.fisco.bcos.web3j.abi.TypeReference;
import org.fisco.bcos.web3j.abi.datatypes.DynamicArray;
import org.fisco.bcos.web3j.abi.datatypes.Function;
import org.fisco.bcos.web3j.abi.datatypes.Type;
import org.fisco.bcos.web3j.abi.datatypes.Utf8String;
import org.fisco.bcos.web3j.abi.datatypes.generated.Int256;
import org.fisco.bcos.web3j.crypto.Credentials;
import org.fisco.bcos.web3j.protocol.Web3j;
import org.fisco.bcos.web3j.protocol.core.RemoteCall;
import org.fisco.bcos.web3j.protocol.core.methods.response.TransactionReceipt;
import org.fisco.bcos.web3j.tuples.generated.Tuple2;
import org.fisco.bcos.web3j.tuples.generated.Tuple3;
import org.fisco.bcos.web3j.tx.Contract;
import org.fisco.bcos.web3j.tx.TransactionManager;
import org.fisco.bcos.web3j.tx.gas.ContractGasProvider;

/**
 * Auto generated code.
 *
 * <p><strong>Do not modify!</strong>
 *
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.fisco.bcos.web3j.codegen.SolidityFunctionWrapperGenerator in the <a
 * href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version none.
 */
@SuppressWarnings("unchecked")
public class HiddenAssetExample extends Contract {
    public static String BINARY =
            "608060405234801561001057600080fd5b506150186000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506134fa806100626000396000f30060806040526004361061008e576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680633aeb91c6146100935780634faaf16e146100bc5780636cd614bb146100fb5780637029144c14610139578063bb60a69614610162578063d8ba51ad1461018b578063e746d232146101b4578063fd2d1b40146101dd575b600080fd5b34801561009f57600080fd5b506100ba60048036036100b59190810190612cc1565b610206565b005b3480156100c857600080fd5b506100e360048036036100de9190810190612cc1565b6105f5565b6040516100f29392919061314e565b60405180910390f35b34801561010757600080fd5b50610122600480360361011d9190810190612cc1565b610ef7565b6040516101309291906131b5565b60405180910390f35b34801561014557600080fd5b50610160600480360361015b9190810190612cc1565b611395565b005b34801561016e57600080fd5b5061018960048036036101849190810190612cc1565b611724565b005b34801561019757600080fd5b506101b260048036036101ad9190810190612cc1565b611970565b005b3480156101c057600080fd5b506101db60048036036101d69190810190612d99565b611ed0565b005b3480156101e957600080fd5b5061020460048036036101ff9190810190612cc1565b61230a565b005b61020e612a35565b600080600060a06040519081016040528060206040519081016040528060008152508152602001602060405190810160405280600081525081526020016020604051908101604052806000815250815260200160206040519081016040528060008152508152602001602060405190810160405280600081525081525093506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636c3e9922866040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016103039190613222565b600060405180830381600087803b15801561031d57600080fd5b505af1158015610331573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525061035a9190810190612e5c565b8393508292508191508090508760000188602001896040018a6060018490528490528490528490525050505060009250610398868560000151610ef7565b809050856080018190528194505050600083146040805190810160405280601881526020017f7468652063726564697420616c7265616479207370656e740000000000000000815250901515610424576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041b9190613200565b60405180910390fd5b50610433868560400151610ef7565b80905085608001819052819450505060008314156040805190810160405280601981526020017f7468652063726564697420616c726561647920657869737473000000000000008152509015156104c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b79190613200565b60405180910390fd5b506104ca86612555565b91506104da828560000151612612565b9050600181146040805190810160405280601d81526020017f6e6f207065726d697373696f6e206f72206f74686572206572726f7273000000815250901515610559576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105509190613200565b60405180910390fd5b5061056d8285604001518660600151612823565b9050600181146040805190810160405280601d81526020017f6e6f207065726d697373696f6e206f72206f74686572206572726f72730000008152509015156105ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e39190613200565b60405180910390fd5b50505050505050565b6060806060600080600060608060606000806106108d612555565b97508773ffffffffffffffffffffffffffffffffffffffff16637857d7c96040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561067657600080fd5b505af115801561068a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506106ae9190810190612bb3565b96508673ffffffffffffffffffffffffffffffffffffffff1663cd30a1d16040805190810160405280600d81526020017f63757272656e74437265646974000000000000000000000000000000000000008152508e6040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161073c9291906132f0565b600060405180830381600087803b15801561075657600080fd5b505af115801561076a573d6000803e3d6000fd5b505050508773ffffffffffffffffffffffffffffffffffffffff1663e8434e398d896040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016107c5929190613244565b602060405180830381600087803b1580156107df57600080fd5b505af11580156107f3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506108179190810190612bdc565b95508573ffffffffffffffffffffffffffffffffffffffff1663949d225d6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561087d57600080fd5b505af1158015610891573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506108b59190810190612c57565b6040519080825280602002602001820160405280156108e857816020015b60608152602001906001900390816108d35790505b5094508573ffffffffffffffffffffffffffffffffffffffff1663949d225d6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561094f57600080fd5b505af1158015610963573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506109879190810190612c57565b6040519080825280602002602001820160405280156109ba57816020015b60608152602001906001900390816109a55790505b5093508573ffffffffffffffffffffffffffffffffffffffff1663949d225d6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610a2157600080fd5b505af1158015610a35573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610a599190810190612c57565b604051908082528060200260200182016040528015610a8c57816020015b6060815260200190600190039081610a775790505b509250600091505b8573ffffffffffffffffffffffffffffffffffffffff1663949d225d6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610af857600080fd5b505af1158015610b0c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610b309190810190612c57565b821215610edf578573ffffffffffffffffffffffffffffffffffffffff1663846719e0836040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610b8c919061319a565b602060405180830381600087803b158015610ba657600080fd5b505af1158015610bba573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610bde9190810190612c05565b90508073ffffffffffffffffffffffffffffffffffffffff16639c981fcb6040805190810160405280600d81526020017f63757272656e74437265646974000000000000000000000000000000000000008152506040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610c6a9190613200565b600060405180830381600087803b158015610c8457600080fd5b505af1158015610c98573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250610cc19190810190612c80565b8583815181101515610ccf57fe5b906020019060200201819052508073ffffffffffffffffffffffffffffffffffffffff16639c981fcb6040805190810160405280600b81526020017f7370656e744372656469740000000000000000000000000000000000000000008152506040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610d669190613200565b600060405180830381600087803b158015610d8057600080fd5b505af1158015610d94573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250610dbd9190810190612c80565b8483815181101515610dcb57fe5b906020019060200201819052508073ffffffffffffffffffffffffffffffffffffffff16639c981fcb6040805190810160405280600e81526020017f726567756c6174696f6e496e666f0000000000000000000000000000000000008152506040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610e629190613200565b600060405180830381600087803b158015610e7c57600080fd5b505af1158015610e90573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250610eb99190810190612c80565b8383815181101515610ec757fe5b90602001906020020181905250816001019150610a94565b8484849a509a509a5050505050505050509250925092565b60006060600080600080610f0a88612555565b93508373ffffffffffffffffffffffffffffffffffffffff16637857d7c96040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610f7057600080fd5b505af1158015610f84573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610fa89190810190612bb3565b92508273ffffffffffffffffffffffffffffffffffffffff1663cd30a1d16040805190810160405280600d81526020017f63757272656e7443726564697400000000000000000000000000000000000000815250896040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016110369291906132f0565b600060405180830381600087803b15801561105057600080fd5b505af1158015611064573d6000803e3d6000fd5b505050508373ffffffffffffffffffffffffffffffffffffffff1663e8434e3988856040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016110bf929190613244565b602060405180830381600087803b1580156110d957600080fd5b505af11580156110ed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506111119190810190612bdc565b91508173ffffffffffffffffffffffffffffffffffffffff1663949d225d6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561117757600080fd5b505af115801561118b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506111af9190810190612c57565b600014156111f5577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80905060206040519081016040528060008152509550955061138a565b8173ffffffffffffffffffffffffffffffffffffffff1663846719e060006040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161124b91906131e5565b602060405180830381600087803b15801561126557600080fd5b505af1158015611279573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061129d9190810190612c05565b905060008173ffffffffffffffffffffffffffffffffffffffff16639c981fcb6040805190810160405280600d81526020017f63726564697453746f72616765000000000000000000000000000000000000008152506040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161132b9190613200565b600060405180830381600087803b15801561134557600080fd5b505af1158015611359573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506113829190810190612c80565b819150955095505b505050509250929050565b600080600061100192508273ffffffffffffffffffffffffffffffffffffffff166356004b6a866040805190810160405280600d81526020017f63757272656e74437265646974000000000000000000000000000000000000008152506040805190810160405280600d81526020017f63726564697453746f72616765000000000000000000000000000000000000008152506040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611462939291906132a4565b602060405180830381600087803b15801561147c57600080fd5b505af1158015611490573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506114b49190810190612c57565b91508273ffffffffffffffffffffffffffffffffffffffff166356004b6a856040805190810160405280600d81526020017f63757272656e74437265646974000000000000000000000000000000000000008152506040805190810160405280601a81526020017f7370656e744372656469742c726567756c6174696f6e496e666f0000000000008152506040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611579939291906132a4565b602060405180830381600087803b15801561159357600080fd5b505af11580156115a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506115cb9190810190612c57565b905060008214806115fb57507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff3caf82145b6040805190810160405280601d81526020017f6e6f207065726d697373696f6e206f72206f74686572206572726f7273000000815250901515611674576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161166b9190613200565b60405180910390fd5b5060008114806116a357507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff3caf81145b6040805190810160405280601d81526020017f6e6f207065726d697373696f6e206f72206f74686572206572726f727300000081525090151561171c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117139190613200565b60405180910390fd5b505050505050565b6060806000606060008060206040519081016040528060008152509550602060405190810160405280600081525094506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16624890d1886040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016117c99190613222565b600060405180830381600087803b1580156117e357600080fd5b505af11580156117f7573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506118209190810190612d2d565b809650819750505060009350602060405190810160405280600081525092506118498887610ef7565b809450819550505060008414156040805190810160405280601981526020017f7468652063726564697420616c726561647920657869737473000000000000008152509015156118cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118c69190613200565b60405180910390fd5b506118d988612555565b91506118e6828787612823565b9050600181146040805190810160405280601d81526020017f6e6f207065726d697373696f6e206f72206f74686572206572726f7273000000815250901515611965576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161195c9190613200565b60405180910390fd5b505050505050505050565b611978612a65565b600080600060e060405190810160405280602060405190810160405280600081525081526020016020604051908101604052806000815250815260200160206040519081016040528060008152508152602001602060405190810160405280600081525081526020016020604051908101604052806000815250815260200160206040519081016040528060008152508152602001602060405190810160405280600081525081525093506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630fc91f48866040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611a999190613222565b600060405180830381600087803b158015611ab357600080fd5b505af1158015611ac7573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250611af09190810190612f1f565b859550849450839350829250819150809050896000018a6020018b6040018c6060018d6080018e60a00186905286905286905286905286905286905250505050505060009250611b44868560000151610ef7565b8090508560c0018190528194505050600083146040805190810160405280601881526020017f7468652063726564697420616c7265616479207370656e740000000000000000815250901515611bd0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611bc79190613200565b60405180910390fd5b50611bdf868560400151610ef7565b8090508560c001819052819450505060008314156040805190810160405280601981526020017f7468652063726564697420616c72656164792065786973747300000000000000815250901515611c6c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c639190613200565b60405180910390fd5b50611c7b868560800151610ef7565b8090508560c001819052819450505060008314156040805190810160405280601981526020017f7468652063726564697420616c72656164792065786973747300000000000000815250901515611d08576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611cff9190613200565b60405180910390fd5b50611d1286612555565b9150611d22828560000151612612565b9050600181146040805190810160405280601d81526020017f6e6f207065726d697373696f6e206f72206f74686572206572726f7273000000815250901515611da1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d989190613200565b60405180910390fd5b50611db58285604001518660600151612823565b9050600181146040805190810160405280601d81526020017f6e6f207065726d697373696f6e206f72206f74686572206572726f7273000000815250901515611e34576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e2b9190613200565b60405180910390fd5b50611e488285608001518660a00151612823565b9050600181146040805190810160405280601d81526020017f6e6f207065726d697373696f6e206f72206f74686572206572726f7273000000815250901515611ec7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ebe9190613200565b60405180910390fd5b50505050505050565b60006060806060600080611ee38a612555565b9550611eef8a8a6105f5565b80955081965082975050505060008551148015611f0d575060008451145b8015611f1a575060008351145b606060405190810160405280602281526020017f74686520726567756c6174696f6e20696e666f20616c7265616479206578697381526020017f7473000000000000000000000000000000000000000000000000000000000000815250901515611fba576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611fb19190613200565b60405180910390fd5b508573ffffffffffffffffffffffffffffffffffffffff166313db93466040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561201f57600080fd5b505af1158015612033573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506120579190810190612c05565b91508173ffffffffffffffffffffffffffffffffffffffff1663e942b5166040805190810160405280600b81526020017f7370656e744372656469740000000000000000000000000000000000000000008152508a6040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016120e59291906132f0565b600060405180830381600087803b1580156120ff57600080fd5b505af1158015612113573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663e942b5166040805190810160405280600e81526020017f726567756c6174696f6e496e666f000000000000000000000000000000000000815250896040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016121a39291906132f0565b600060405180830381600087803b1580156121bd57600080fd5b505af11580156121d1573d6000803e3d6000fd5b505050508573ffffffffffffffffffffffffffffffffffffffff166331afac368a846040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161222c929190613274565b602060405180830381600087803b15801561224657600080fd5b505af115801561225a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061227e9190810190612c57565b9050600181146040805190810160405280601d81526020017f6e6f207065726d697373696f6e206f72206f74686572206572726f72730000008152509015156122fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016122f49190613200565b60405180910390fd5b5050505050505050505050565b6060806000606060008060206040519081016040528060008152509550602060405190810160405280600081525094506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638f16959a886040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016123b09190613222565b600060405180830381600087803b1580156123ca57600080fd5b505af11580156123de573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506124079190810190612d2d565b809650819750505060009350602060405190810160405280600081525092506124308887610ef7565b8094508195505050600084146040805190810160405280601881526020017f7468652063726564697420616c7265616479207370656e7400000000000000008152509015156124b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016124ac9190613200565b60405180910390fd5b506124bf88612555565b91506124cb8287612612565b9050600181146040805190810160405280601d81526020017f6e6f207065726d697373696f6e206f72206f74686572206572726f727300000081525090151561254a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016125419190613200565b60405180910390fd5b505050505050505050565b600080600061100191508173ffffffffffffffffffffffffffffffffffffffff1663f23f63c9856040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016125b49190613222565b602060405180830381600087803b1580156125ce57600080fd5b505af11580156125e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506126069190810190612c2e565b90508092505050919050565b6000808373ffffffffffffffffffffffffffffffffffffffff16637857d7c96040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561267957600080fd5b505af115801561268d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506126b19190810190612bb3565b90508073ffffffffffffffffffffffffffffffffffffffff1663cd30a1d16040805190810160405280600d81526020017f63757272656e7443726564697400000000000000000000000000000000000000815250856040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161273f9291906132f0565b600060405180830381600087803b15801561275957600080fd5b505af115801561276d573d6000803e3d6000fd5b505050508373ffffffffffffffffffffffffffffffffffffffff166328bb211784836040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016127c8929190613244565b602060405180830381600087803b1580156127e257600080fd5b505af11580156127f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061281a9190810190612c57565b91505092915050565b6000808473ffffffffffffffffffffffffffffffffffffffff166313db93466040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561288a57600080fd5b505af115801561289e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506128c29190810190612c05565b90508073ffffffffffffffffffffffffffffffffffffffff1663e942b5166040805190810160405280600d81526020017f63726564697453746f7261676500000000000000000000000000000000000000815250856040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016129509291906132f0565b600060405180830381600087803b15801561296a57600080fd5b505af115801561297e573d6000803e3d6000fd5b505050508473ffffffffffffffffffffffffffffffffffffffff166331afac3685836040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016129d9929190613274565b602060405180830381600087803b1580156129f357600080fd5b505af1158015612a07573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612a2b9190810190612c57565b9150509392505050565b60a06040519081016040528060608152602001606081526020016060815260200160608152602001606081525090565b60e060405190810160405280606081526020016060815260200160608152602001606081526020016060815260200160608152602001606081525090565b6000612aaf82516133e5565b905092915050565b6000612ac382516133f7565b905092915050565b6000612ad78251613409565b905092915050565b6000612aeb825161341b565b905092915050565b6000612aff825161342d565b905092915050565b600082601f8301121515612b1a57600080fd5b8135612b2d612b2882613354565b613327565b91508082526020830160208301858383011115612b4957600080fd5b612b5483828461346d565b50505092915050565b600082601f8301121515612b7057600080fd5b8151612b83612b7e82613354565b613327565b91508082526020830160208301858383011115612b9f57600080fd5b612baa83828461347c565b50505092915050565b600060208284031215612bc557600080fd5b6000612bd384828501612aa3565b91505092915050565b600060208284031215612bee57600080fd5b6000612bfc84828501612ab7565b91505092915050565b600060208284031215612c1757600080fd5b6000612c2584828501612acb565b91505092915050565b600060208284031215612c4057600080fd5b6000612c4e84828501612adf565b91505092915050565b600060208284031215612c6957600080fd5b6000612c7784828501612af3565b91505092915050565b600060208284031215612c9257600080fd5b600082015167ffffffffffffffff811115612cac57600080fd5b612cb884828501612b5d565b91505092915050565b60008060408385031215612cd457600080fd5b600083013567ffffffffffffffff811115612cee57600080fd5b612cfa85828601612b07565b925050602083013567ffffffffffffffff811115612d1757600080fd5b612d2385828601612b07565b9150509250929050565b60008060408385031215612d4057600080fd5b600083015167ffffffffffffffff811115612d5a57600080fd5b612d6685828601612b5d565b925050602083015167ffffffffffffffff811115612d8357600080fd5b612d8f85828601612b5d565b9150509250929050565b60008060008060808587031215612daf57600080fd5b600085013567ffffffffffffffff811115612dc957600080fd5b612dd587828801612b07565b945050602085013567ffffffffffffffff811115612df257600080fd5b612dfe87828801612b07565b935050604085013567ffffffffffffffff811115612e1b57600080fd5b612e2787828801612b07565b925050606085013567ffffffffffffffff811115612e4457600080fd5b612e5087828801612b07565b91505092959194509250565b60008060008060808587031215612e7257600080fd5b600085015167ffffffffffffffff811115612e8c57600080fd5b612e9887828801612b5d565b945050602085015167ffffffffffffffff811115612eb557600080fd5b612ec187828801612b5d565b935050604085015167ffffffffffffffff811115612ede57600080fd5b612eea87828801612b5d565b925050606085015167ffffffffffffffff811115612f0757600080fd5b612f1387828801612b5d565b91505092959194509250565b60008060008060008060c08789031215612f3857600080fd5b600087015167ffffffffffffffff811115612f5257600080fd5b612f5e89828a01612b5d565b965050602087015167ffffffffffffffff811115612f7b57600080fd5b612f8789828a01612b5d565b955050604087015167ffffffffffffffff811115612fa457600080fd5b612fb089828a01612b5d565b945050606087015167ffffffffffffffff811115612fcd57600080fd5b612fd989828a01612b5d565b935050608087015167ffffffffffffffff811115612ff657600080fd5b61300289828a01612b5d565b92505060a087015167ffffffffffffffff81111561301f57600080fd5b61302b89828a01612b5d565b9150509295509295509295565b60006130438261338d565b8084526020840193508360208202850161305c85613380565b60005b84811015613095578383038852613077838351613118565b9250613082826133ae565b915060208801975060018101905061305f565b508196508694505050505092915050565b6130af81613437565b82525050565b6130be81613449565b82525050565b6130cd816133db565b82525050565b6130dc8161345b565b82525050565b60006130ed826133a3565b80845261310181602086016020860161347c565b61310a816134af565b602085010191505092915050565b600061312382613398565b80845261313781602086016020860161347c565b613140816134af565b602085010191505092915050565b600060608201905081810360008301526131688186613038565b9050818103602083015261317c8185613038565b905081810360408301526131908184613038565b9050949350505050565b60006020820190506131af60008301846130c4565b92915050565b60006040820190506131ca60008301856130c4565b81810360208301526131dc81846130e2565b90509392505050565b60006020820190506131fa60008301846130d3565b92915050565b6000602082019050818103600083015261321a8184613118565b905092915050565b6000602082019050818103600083015261323c81846130e2565b905092915050565b6000604082019050818103600083015261325e81856130e2565b905061326d60208301846130a6565b9392505050565b6000604082019050818103600083015261328e81856130e2565b905061329d60208301846130b5565b9392505050565b600060608201905081810360008301526132be81866130e2565b905081810360208301526132d28185613118565b905081810360408301526132e68184613118565b9050949350505050565b6000604082019050818103600083015261330a8185613118565b9050818103602083015261331e81846130e2565b90509392505050565b6000604051905081810181811067ffffffffffffffff8211171561334a57600080fd5b8060405250919050565b600067ffffffffffffffff82111561336b57600080fd5b601f19601f8301169050602081019050919050565b6000602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006133f0826133bb565b9050919050565b6000613402826133bb565b9050919050565b6000613414826133bb565b9050919050565b6000613426826133bb565b9050919050565b6000819050919050565b6000613442826133bb565b9050919050565b6000613454826133bb565b9050919050565b6000613466826133db565b9050919050565b82818337600083830152505050565b60005b8381101561349a57808201518184015260208101905061347f565b838111156134a9576000848401525b50505050565b6000601f19601f83011690509190505600a265627a7a723058204cc8e47bfb329f087eb03e6833d2bbd97c64384d0d80ed7f8c2b0cc5d518ad3b6c6578706572696d656e74616cf50037";

    public static final String ABI =
            "[{\"constant\":false,\"inputs\":[{\"name\":\"hiddenAssetTableName\",\"type\":\"string\"},{\"name\":\"transferRequestPb\",\"type\":\"string\"}],\"name\":\"transferredCredit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"regulationInfoTableName\",\"type\":\"string\"},{\"name\":\"currentCreditPb\",\"type\":\"string\"}],\"name\":\"queryRegulationInfo\",\"outputs\":[{\"name\":\"\",\"type\":\"string[]\"},{\"name\":\"\",\"type\":\"string[]\"},{\"name\":\"\",\"type\":\"string[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"hiddenAssetTableName\",\"type\":\"string\"},{\"name\":\"currentCreditPb\",\"type\":\"string\"}],\"name\":\"queryCredit\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"hiddenAssetTableName\",\"type\":\"string\"},{\"name\":\"regulationInfoTableName\",\"type\":\"string\"}],\"name\":\"init\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"hiddenAssetTableName\",\"type\":\"string\"},{\"name\":\"issueArgumentPb\",\"type\":\"string\"}],\"name\":\"issueCredit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"hiddenAssetTableName\",\"type\":\"string\"},{\"name\":\"splitRequestPb\",\"type\":\"string\"}],\"name\":\"splitCredit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"regulationInfoTableName\",\"type\":\"string\"},{\"name\":\"currentCreditPb\",\"type\":\"string\"},{\"name\":\"spentCreditPb\",\"type\":\"string\"},{\"name\":\"regulationInfoPb\",\"type\":\"string\"}],\"name\":\"insertRegulationInfo\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"hiddenAssetTableName\",\"type\":\"string\"},{\"name\":\"fulfillArgumentPb\",\"type\":\"string\"}],\"name\":\"fulfillCredit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]";

    public static final String FUNC_TRANSFERREDCREDIT = "transferredCredit";

    public static final String FUNC_QUERYREGULATIONINFO = "queryRegulationInfo";

    public static final String FUNC_QUERYCREDIT = "queryCredit";

    public static final String FUNC_INIT = "init";

    public static final String FUNC_ISSUECREDIT = "issueCredit";

    public static final String FUNC_SPLITCREDIT = "splitCredit";

    public static final String FUNC_INSERTREGULATIONINFO = "insertRegulationInfo";

    public static final String FUNC_FULFILLCREDIT = "fulfillCredit";

    @Deprecated
    protected HiddenAssetExample(
            String contractAddress,
            Web3j web3j,
            Credentials credentials,
            BigInteger gasPrice,
            BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected HiddenAssetExample(
            String contractAddress,
            Web3j web3j,
            Credentials credentials,
            ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected HiddenAssetExample(
            String contractAddress,
            Web3j web3j,
            TransactionManager transactionManager,
            BigInteger gasPrice,
            BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected HiddenAssetExample(
            String contractAddress,
            Web3j web3j,
            TransactionManager transactionManager,
            ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public RemoteCall<TransactionReceipt> transferredCredit(
            String hiddenAssetTableName, String transferRequestPb) {
        final Function function =
                new Function(
                        FUNC_TRANSFERREDCREDIT,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(
                                        hiddenAssetTableName),
                                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(
                                        transferRequestPb)),
                        Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public void transferredCredit(
            String hiddenAssetTableName,
            String transferRequestPb,
            TransactionSucCallback callback) {
        final Function function =
                new Function(
                        FUNC_TRANSFERREDCREDIT,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(
                                        hiddenAssetTableName),
                                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(
                                        transferRequestPb)),
                        Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String transferredCreditSeq(String hiddenAssetTableName, String transferRequestPb) {
        final Function function =
                new Function(
                        FUNC_TRANSFERREDCREDIT,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(
                                        hiddenAssetTableName),
                                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(
                                        transferRequestPb)),
                        Collections.<TypeReference<?>>emptyList());
        return createTransactionSeq(function);
    }

    public RemoteCall<Tuple3<List<String>, List<String>, List<String>>> queryRegulationInfo(
            String regulationInfoTableName, String currentCreditPb) {
        final Function function =
                new Function(
                        FUNC_QUERYREGULATIONINFO,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(
                                        regulationInfoTableName),
                                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(currentCreditPb)),
                        Arrays.<TypeReference<?>>asList(
                                new TypeReference<DynamicArray<Utf8String>>() {},
                                new TypeReference<DynamicArray<Utf8String>>() {},
                                new TypeReference<DynamicArray<Utf8String>>() {}));
        return new RemoteCall<Tuple3<List<String>, List<String>, List<String>>>(
                new Callable<Tuple3<List<String>, List<String>, List<String>>>() {
                    @Override
                    public Tuple3<List<String>, List<String>, List<String>> call()
                            throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple3<List<String>, List<String>, List<String>>(
                                convertToNative((List<Utf8String>) results.get(0).getValue()),
                                convertToNative((List<Utf8String>) results.get(1).getValue()),
                                convertToNative((List<Utf8String>) results.get(2).getValue()));
                    }
                });
    }

    public RemoteCall<Tuple2<BigInteger, String>> queryCredit(
            String hiddenAssetTableName, String currentCreditPb) {
        final Function function =
                new Function(
                        FUNC_QUERYCREDIT,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(
                                        hiddenAssetTableName),
                                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(currentCreditPb)),
                        Arrays.<TypeReference<?>>asList(
                                new TypeReference<Int256>() {},
                                new TypeReference<Utf8String>() {}));
        return new RemoteCall<Tuple2<BigInteger, String>>(
                new Callable<Tuple2<BigInteger, String>>() {
                    @Override
                    public Tuple2<BigInteger, String> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple2<BigInteger, String>(
                                (BigInteger) results.get(0).getValue(),
                                (String) results.get(1).getValue());
                    }
                });
    }

    public RemoteCall<TransactionReceipt> init(
            String hiddenAssetTableName, String regulationInfoTableName) {
        final Function function =
                new Function(
                        FUNC_INIT,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(
                                        hiddenAssetTableName),
                                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(
                                        regulationInfoTableName)),
                        Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public void init(
            String hiddenAssetTableName,
            String regulationInfoTableName,
            TransactionSucCallback callback) {
        final Function function =
                new Function(
                        FUNC_INIT,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(
                                        hiddenAssetTableName),
                                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(
                                        regulationInfoTableName)),
                        Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String initSeq(String hiddenAssetTableName, String regulationInfoTableName) {
        final Function function =
                new Function(
                        FUNC_INIT,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(
                                        hiddenAssetTableName),
                                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(
                                        regulationInfoTableName)),
                        Collections.<TypeReference<?>>emptyList());
        return createTransactionSeq(function);
    }

    public RemoteCall<TransactionReceipt> issueCredit(
            String hiddenAssetTableName, String issueArgumentPb) {
        final Function function =
                new Function(
                        FUNC_ISSUECREDIT,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(
                                        hiddenAssetTableName),
                                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(issueArgumentPb)),
                        Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public void issueCredit(
            String hiddenAssetTableName, String issueArgumentPb, TransactionSucCallback callback) {
        final Function function =
                new Function(
                        FUNC_ISSUECREDIT,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(
                                        hiddenAssetTableName),
                                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(issueArgumentPb)),
                        Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String issueCreditSeq(String hiddenAssetTableName, String issueArgumentPb) {
        final Function function =
                new Function(
                        FUNC_ISSUECREDIT,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(
                                        hiddenAssetTableName),
                                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(issueArgumentPb)),
                        Collections.<TypeReference<?>>emptyList());
        return createTransactionSeq(function);
    }

    public RemoteCall<TransactionReceipt> splitCredit(
            String hiddenAssetTableName, String splitRequestPb) {
        final Function function =
                new Function(
                        FUNC_SPLITCREDIT,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(
                                        hiddenAssetTableName),
                                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(splitRequestPb)),
                        Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public void splitCredit(
            String hiddenAssetTableName, String splitRequestPb, TransactionSucCallback callback) {
        final Function function =
                new Function(
                        FUNC_SPLITCREDIT,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(
                                        hiddenAssetTableName),
                                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(splitRequestPb)),
                        Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String splitCreditSeq(String hiddenAssetTableName, String splitRequestPb) {
        final Function function =
                new Function(
                        FUNC_SPLITCREDIT,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(
                                        hiddenAssetTableName),
                                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(splitRequestPb)),
                        Collections.<TypeReference<?>>emptyList());
        return createTransactionSeq(function);
    }

    public RemoteCall<TransactionReceipt> insertRegulationInfo(
            String regulationInfoTableName,
            String currentCreditPb,
            String spentCreditPb,
            String regulationInfoPb) {
        final Function function =
                new Function(
                        FUNC_INSERTREGULATIONINFO,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(
                                        regulationInfoTableName),
                                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(currentCreditPb),
                                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(spentCreditPb),
                                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(
                                        regulationInfoPb)),
                        Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public void insertRegulationInfo(
            String regulationInfoTableName,
            String currentCreditPb,
            String spentCreditPb,
            String regulationInfoPb,
            TransactionSucCallback callback) {
        final Function function =
                new Function(
                        FUNC_INSERTREGULATIONINFO,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(
                                        regulationInfoTableName),
                                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(currentCreditPb),
                                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(spentCreditPb),
                                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(
                                        regulationInfoPb)),
                        Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String insertRegulationInfoSeq(
            String regulationInfoTableName,
            String currentCreditPb,
            String spentCreditPb,
            String regulationInfoPb) {
        final Function function =
                new Function(
                        FUNC_INSERTREGULATIONINFO,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(
                                        regulationInfoTableName),
                                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(currentCreditPb),
                                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(spentCreditPb),
                                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(
                                        regulationInfoPb)),
                        Collections.<TypeReference<?>>emptyList());
        return createTransactionSeq(function);
    }

    public RemoteCall<TransactionReceipt> fulfillCredit(
            String hiddenAssetTableName, String fulfillArgumentPb) {
        final Function function =
                new Function(
                        FUNC_FULFILLCREDIT,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(
                                        hiddenAssetTableName),
                                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(
                                        fulfillArgumentPb)),
                        Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public void fulfillCredit(
            String hiddenAssetTableName,
            String fulfillArgumentPb,
            TransactionSucCallback callback) {
        final Function function =
                new Function(
                        FUNC_FULFILLCREDIT,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(
                                        hiddenAssetTableName),
                                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(
                                        fulfillArgumentPb)),
                        Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String fulfillCreditSeq(String hiddenAssetTableName, String fulfillArgumentPb) {
        final Function function =
                new Function(
                        FUNC_FULFILLCREDIT,
                        Arrays.<Type>asList(
                                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(
                                        hiddenAssetTableName),
                                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(
                                        fulfillArgumentPb)),
                        Collections.<TypeReference<?>>emptyList());
        return createTransactionSeq(function);
    }

    @Deprecated
    public static HiddenAssetExample load(
            String contractAddress,
            Web3j web3j,
            Credentials credentials,
            BigInteger gasPrice,
            BigInteger gasLimit) {
        return new HiddenAssetExample(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static HiddenAssetExample load(
            String contractAddress,
            Web3j web3j,
            TransactionManager transactionManager,
            BigInteger gasPrice,
            BigInteger gasLimit) {
        return new HiddenAssetExample(
                contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static HiddenAssetExample load(
            String contractAddress,
            Web3j web3j,
            Credentials credentials,
            ContractGasProvider contractGasProvider) {
        return new HiddenAssetExample(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static HiddenAssetExample load(
            String contractAddress,
            Web3j web3j,
            TransactionManager transactionManager,
            ContractGasProvider contractGasProvider) {
        return new HiddenAssetExample(
                contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<HiddenAssetExample> deploy(
            Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(
                HiddenAssetExample.class, web3j, credentials, contractGasProvider, BINARY, "");
    }

    public static RemoteCall<HiddenAssetExample> deploy(
            Web3j web3j,
            TransactionManager transactionManager,
            ContractGasProvider contractGasProvider) {
        return deployRemoteCall(
                HiddenAssetExample.class,
                web3j,
                transactionManager,
                contractGasProvider,
                BINARY,
                "");
    }

    @Deprecated
    public static RemoteCall<HiddenAssetExample> deploy(
            Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(
                HiddenAssetExample.class, web3j, credentials, gasPrice, gasLimit, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<HiddenAssetExample> deploy(
            Web3j web3j,
            TransactionManager transactionManager,
            BigInteger gasPrice,
            BigInteger gasLimit) {
        return deployRemoteCall(
                HiddenAssetExample.class,
                web3j,
                transactionManager,
                gasPrice,
                gasLimit,
                BINARY,
                "");
    }
}
